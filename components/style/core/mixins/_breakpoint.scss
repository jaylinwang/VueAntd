// Breakpoint viewport sizes and media queries.
//
// Breakpoints are defined as a map of (name: minimum width), order from small to large:
//
//    (xs: 0, sm: 576px, md: 768px)
//

// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.
// Next breakpint point name for $name, last break point return null;
//
// >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px))
// md
@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-get($breakpoints)) {
    $index: index($breakpints, $name);
    $len: length($breakpoint-names);
    @return if($index < $len, nth($breakpoint-names, $index), null)
}


// Minimum breakpoint width for $name
//
// >> breakpoint-min(sm,(xs: 0, sm: 576px, md: 768px))
// 576px
@function breakpoint-min($name, $breakpoints: $grid-breakpints) {
    $min: map-get($breakpoints, $name);
    @return if($min != 0, $min, 0);
}

// Maximum breakpint width for $name
//
// >> breakpoint-min(sm,(xs: 0, sm: 576px, md: 768px))
// 765px
@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {
    $next: breakpoint-next($name, $breakpoints);
    @return ($next != null, breakpoint-min($next, $breakpoints) - 1px, null);
}

// Breakpoint infx str
// >> breakpoint-infix(md)
// -md
@function breakpoint-infix($name) {
    @return if($name != null, -#{ $name }, "");
}

// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.
// Makes the @content apply to the given breakpoint and wider.
@mixin media-breakpoint-min($name, $breakpoints: $grid-breakpoints) {
    $min: breakpoint-min($name, $breakpoints);
    @if $min {
        @media (min-width: $min) {
            @content;
        }
    } @else {
        @content;
    }
}

// Media of at most the maximum breakpoint width. No query for the largest breakpoint.
// Makes the @content apply to the given breakpoint and narrower.
@mixin media-breakpoint-max($name, $breakpoints: $grid-breakpoints) {
    $max: breakpoint-max($name, $breakpoints);
    @if $max {
        @media (max-width: $max) {
            @content;
        }
    }  @else {
        @content;
    }
}

// Media that spans multiple breakpoint widths.
// Makes the @content apply between the min and max breakpoints
@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {
    @include media-breakpoint-up($lower, $breakpoints) {
        @include media-breakpoint-down($upper, $breakpoints) {
            @content;
        }
    }
}